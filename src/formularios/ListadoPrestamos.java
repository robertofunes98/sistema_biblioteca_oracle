/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import core.ConexionDB;
import core.Variables;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author funes
 */
public class ListadoPrestamos extends javax.swing.JInternalFrame {
    
    ConexionDB conexion;
    DefaultTableModel modeloLibros;
    int tipoBusqueda = 0;//0=no buscar, 1=por id, 2=por nombre, 3=por autor, 4=por categoria
    LinkedList<LinkedList<String>> alAutores, alCategorias, alLibros;


    /**
     * Creates new form ListadoLibros
     */
    public ListadoPrestamos() {
        initComponents();
        
        try{
            conexion=new ConexionDB(Variables.rutaDB, Variables.userDB, Variables.claveDB);
        }
        catch(ClassNotFoundException | IllegalAccessException | InstantiationException | SQLException e)
        {
            JOptionPane.showInternalMessageDialog(rootPane, "Error en la conexion a la base de datos. Contacte a su administrador", "Error",JOptionPane.ERROR_MESSAGE);
        }
        
     
        modeloLibros=(DefaultTableModel) tblLibros.getModel();

        tblLibros.getColumnModel().getColumn(0).setPreferredWidth(55);
        tblLibros.getColumnModel().getColumn(1).setPreferredWidth(240);
        tblLibros.getColumnModel().getColumn(2).setPreferredWidth(163);
        tblLibros.getColumnModel().getColumn(3).setPreferredWidth(90);
        tblLibros.getColumnModel().getColumn(4).setPreferredWidth(90);
        tblLibros.getColumnModel().getColumn(5).setPreferredWidth(90);
        tblLibros.getColumnModel().getColumn(6).setPreferredWidth(60);
        
        
        //TODO: temp
        cargarTabla();
        //TODO: temp
        ocultarBuscadores();
        
        //ocultando objetos a usuarios
        if(Variables.user.tipoUsuario==0)
        {
            btnAbrirDialogoImpresion.setVisible(false);
            btnModificarPrestamo.setVisible(false);
        }
        
        ((JTextField)dcBuscador.getDateEditor()).setEditable(false);
        
        dcBuscador.getDateEditor().addPropertyChangeListener(
            new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent e) {
                if ("date".equals(e.getPropertyName())) 
                {
                    System.out.println(e.getPropertyName()
                        + ": " + (Date) e.getNewValue());
                    
                    SimpleDateFormat parser=new SimpleDateFormat("yyyy-MM-dd");
                    
                    System.out.println(parser.format(e.getNewValue()));
                    
                    buscarPor(tipoBusqueda, parser.format(e.getNewValue()));
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnModificarPrestamo = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLibros = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        tfBuscador = new javax.swing.JTextField();
        cbBuscarPor = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbOrdenarPor = new javax.swing.JComboBox<>();
        dcBuscador = new com.toedter.calendar.JDateChooser();
        btnAbrirDialogoImpresion = new javax.swing.JButton();

        btnModificarPrestamo.setBackground(new java.awt.Color(255, 255, 255));
        btnModificarPrestamo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modificar_32x32.png"))); // NOI18N
        btnModificarPrestamo.setText("Marcar como devuelto");
        btnModificarPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPrestamoActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(75, 108, 141));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Listado de prestamos");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/libros_32x32.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/libros_32x32.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(100, 133, 166));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblLibros.setBorder(new javax.swing.border.MatteBorder(null));
        tblLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID prestamo", "Prestamista", "Libro", "Fecha prestado", "Fecha esperada de devolucion", "Fecha de devolucion", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblLibros.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblLibros.setRowHeight(32);
        tblLibros.setSelectionBackground(new java.awt.Color(0, 153, 153));
        tblLibros.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblLibrosFocusLost(evt);
            }
        });
        tblLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLibrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblLibros);

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar_16x16.png"))); // NOI18N
        jLabel2.setText("Buscar por:");

        tfBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBuscadorKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfBuscadorKeyTyped(evt);
            }
        });

        cbBuscarPor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No buscar", "Prestamista", "Libro", "Fecha de prestamo", "Fecha estimada de devolución", "Fecha real de devolución" }));
        cbBuscarPor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBuscarPorItemStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ordenar_32_32.png"))); // NOI18N
        jLabel5.setText("Ordenar por:");

        cbOrdenarPor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No ordenar", "Prestamista", "Libro", "Fecha de prestamo", "Fecha estimada de devolución", "Fecha real de devolucion" }));
        cbOrdenarPor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbOrdenarPorItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(cbOrdenarPor, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(dcBuscador, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(cbBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(tfBuscador, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dcBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbOrdenarPor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(150, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        btnAbrirDialogoImpresion.setBackground(new java.awt.Color(255, 255, 255));
        btnAbrirDialogoImpresion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print_32_32.png"))); // NOI18N
        btnAbrirDialogoImpresion.setText("Imprimir reporte");
        btnAbrirDialogoImpresion.setName("btnImprimirReporte"); // NOI18N
        btnAbrirDialogoImpresion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirDialogoImpresionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnModificarPrestamo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAbrirDialogoImpresion))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarPrestamo)
                    .addComponent(btnAbrirDialogoImpresion))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbBuscarPorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBuscarPorItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() ==  ItemEvent.SELECTED)
        {
            switch(cbBuscarPor.getSelectedIndex())
            {
                case 0:
                    cargarTabla();
                    ocultarBuscadores();
                    tipoBusqueda=0;
                    break;
                case 1:
                    ocultarBuscadores();
                    tfBuscador.setVisible(true);
                    tipoBusqueda=1;
                    break;
                case 2:
                    ocultarBuscadores();
                    tfBuscador.setVisible(true);
                    tipoBusqueda=2;
                    break;
                case 3:
                    ocultarBuscadores();
                    dcBuscador.setVisible(true);
                    tipoBusqueda=3;
                    break;
                case 4:
                    ocultarBuscadores();
                    dcBuscador.setVisible(true);
                    tipoBusqueda=4;
                    break;
            }
            SwingUtilities.updateComponentTreeUI(this);
        }
    }//GEN-LAST:event_cbBuscarPorItemStateChanged

    private void tfBuscadorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscadorKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tfBuscadorKeyTyped

    private void tfBuscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscadorKeyReleased
        // TODO add your handling code here:
        buscarPor(tipoBusqueda, tfBuscador.getText());
    }//GEN-LAST:event_tfBuscadorKeyReleased

    private void tblLibrosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblLibrosFocusLost
        // TODO add your handling code he
    }//GEN-LAST:event_tblLibrosFocusLost

    private void tblLibrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLibrosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblLibrosMouseClicked

    private void btnModificarPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPrestamoActionPerformed
        // TODO add your handling code here:
        if (tblLibros.getSelectedRows().length > 0) {
            int dialogResult = JOptionPane.showConfirmDialog (null, "¿Desea marcar como devuelto este libro? No podra volverlo a activar","Alerta",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
                try {
                    conexion.ejecutarComando("update oina_prestamo set estado = 'inactivo' where id_prestamo = "
                            + modeloLibros.getValueAt(tblLibros.getSelectedRow(), 0));
                } catch (SQLException ex) {
                   JOptionPane.showMessageDialog(rootPane, "error: " + ex);
                }
                cargarTabla();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se ha seleccionado ningún registro", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnModificarPrestamoActionPerformed

    private void btnAbrirDialogoImpresionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirDialogoImpresionActionPerformed
        // TODO add your handling code here:
        
        ImprimirReporteDialog jDialog = new ImprimirReporteDialog(FormularioPrincipal.contex, true);
        jDialog.setLocationRelativeTo(this);
        jDialog.setVisible(true);

    }//GEN-LAST:event_btnAbrirDialogoImpresionActionPerformed

    private void cbOrdenarPorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbOrdenarPorItemStateChanged
        // TODO add your handling code here:
        if(evt.getStateChange() ==  ItemEvent.SELECTED)
        {
            cargarTabla(cbOrdenarPor.getSelectedIndex());
        }
    }//GEN-LAST:event_cbOrdenarPorItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirDialogoImpresion;
    private javax.swing.JButton btnModificarPrestamo;
    private javax.swing.JComboBox<String> cbBuscarPor;
    private javax.swing.JComboBox<String> cbOrdenarPor;
    private com.toedter.calendar.JDateChooser dcBuscador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLibros;
    private javax.swing.JTextField tfBuscador;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla() {
        limpiarTabla();
        try{
            ResultSet rsResultado=conexion.ejecutar(
                    "select p.id_prestamo, (u.nombres || ' ' || u.apellidos) as prestamista, l.nombre, TO_CHAR(p.fecha_prestamo, 'yyyy-mm-dd'), TO_CHAR(p.fecha_devolucion_estimada, 'yyyy-mm-dd'), TO_CHAR(p.fecha_devolucion_real, 'yyyy-mm-dd'), p.estado" +
                    " from oina_prestamo p" +
                    " inner join oina_usuario u" +
                    " on u.nombre = p.id_usuario" +
                    " inner join oina_libro l" +
                    " on l.id_libro = p.id_libro");

            alLibros=conexion.convertirRsToArrayList(rsResultado);

            for(LinkedList<String> aux : alLibros)
            {
                modeloLibros.addRow(new String[] {aux.get(0), aux.get(1), aux.get(2), aux.get(3), aux.get(4),aux.get(5),aux.get(6)});
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "error: "+e);
        }
    }
    
    private void cargarTabla(int tipoOrden) {
        limpiarTabla();
        String sql="select p.id_prestamo, (u.nombres || ' ' || u.apellidos) as prestamista, " +
                    " l.nombre, TO_CHAR(p.fecha_prestamo, 'yyyy-mm-dd') as fecha_prestamo, TO_CHAR(p.fecha_devolucion_estimada, 'yyyy-mm-dd') as fecha_devolucion_estimada,"+
                    " TO_CHAR(p.fecha_devolucion_real, 'yyyy-mm-dd') as fecha_devolucion_real, p.estado" +
                    " from oina_prestamo p" +
                    " inner join oina_usuario u" +
                    " on u.nombre = p.id_usuario" +
                    " inner join oina_libro l" +
                    " on l.id_libro = p.id_libro";
        
        switch(tipoOrden)
        {
            case 1:
                sql+=" ORDER BY p.id_prestamo ASC";
                break;
                
            case 2:
                sql+=" ORDER BY prestamista ASC";
                break;
                
            case 3:
                sql+=" ORDER BY l.nombre ASC";
                break;
                
            case 4:
                sql+=" ORDER BY fecha_prestamo ASC";
                break;
                
            case 5:
                sql+=" ORDER BY fecha_devolucion_estimada ASC";
                break;
            case 6:
                sql+=" ORDER BY fecha_devolucion_real ASC";
                break;
        }
        
        try{
            ResultSet rsResultado=conexion.ejecutar(sql);

            alLibros=conexion.convertirRsToArrayList(rsResultado);

            for(LinkedList<String> aux : alLibros)
            {
                modeloLibros.addRow(new String[] {aux.get(0), aux.get(1), aux.get(2), aux.get(3), aux.get(4),aux.get(5),aux.get(6)});
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "error: "+e);
        }
    }

    private void ocultarBuscadores() {
        tfBuscador.setVisible(false);
        dcBuscador.setVisible(false);
    }

    
    private void buscarPor(int tipoBusqueda, String parametro) {
        limpiarTabla();
        String sql="select p.id_prestamo, (u.nombres || ' ' || u.apellidos) as prestamista, " +
                    " l.nombre, TO_CHAR(p.fecha_prestamo, 'yyyy-mm-dd') as fecha_prestamo, TO_CHAR(p.fecha_devolucion_estimada, 'yyyy-mm-dd') as fecha_devolucion_estimada,"+
                    " TO_CHAR(p.fecha_devolucion_real, 'yyyy-mm-dd') as fecha_devolucion_real, p.estado" +
                    " from oina_prestamo p" +
                    " inner join oina_usuario u" +
                    " on u.nombre = p.id_usuario" +
                    " inner join oina_libro l" +
                    " on l.id_libro = p.id_libro";
        
        switch(tipoBusqueda)
        {
            case 1:
                sql += " where (u.nombres || ' ' || u.apellidos) LIKE '%"+parametro.toLowerCase()+"%'";
                break;
                
            case 2:
                sql += " where l.nombre LIKE '%"+parametro.toLowerCase()+"%'";
                break;
                
            case 3:
                sql += " where p.fecha_prestamo = TO_DATE('"+parametro.toLowerCase()+"', 'YYYY-MM-DD')";
                break;
                
            case 4:
                sql += " where p.fecha_devolucion_estimada = TO_DATE('"+parametro.toLowerCase()+"', 'YYYY-MM-DD')";
                break;
                
            case 5:
                sql += " where p.fecha_devolucion_real = TO_DATE('"+parametro.toLowerCase()+"', 'YYYY-MM-DD')";
                break;
        }
        
        try{
            ResultSet rsResultado=conexion.ejecutar(sql);

            alLibros=conexion.convertirRsToArrayList(rsResultado);

            for(LinkedList<String> aux : alLibros)
            {
                modeloLibros.addRow(new String[] {aux.get(0), aux.get(1), aux.get(2), aux.get(3), aux.get(4),aux.get(5),aux.get(6)});
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(rootPane, "error: "+e);
        }
    }
    

    private void limpiarTabla() {
        modeloLibros.setRowCount(0);
    }

}
